{
    /*
    // Place your snippets for PHP here. Each snippet is defined under a snippet name and has a prefix, body and 
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
    // same ids are connected.
    // Example:
    "Print to console": {
        "prefix": "log",
        "body": [
            "console.log('$1');",
            "$2"
        ],
        "description": "Log output to console"
    }
*/
    "lion annotation": {
        "prefix": "lion",
        "body": [
            "/**",
            " * ================",
            " * @Author:    lion",
            " * @ver:       $1",
            " * @DataTime:  $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
            " * @describe:  $2",
            " * ================",
            " */"
        ],
        "description": "lion annotation"
    },
    "create_controller_function": {
        "prefix": "func_ctrl_creater",
        "body": [
            "public function $1()",
            "{",
            "    /**",
            "     * ================",
            "     * @Author:    lion",
            "     * @ver:       $2",
            "     * @DataTime:  $CURRENT_YEAR-$CURRENT_MONTH-$CURRENT_DATE",
            "     * @describe:  $1 function",
            "     * ================",
            "     */",
            "    \\$post = \\$this->data->get_post();//获得post",
            "    \\$cond = 0;//默认成功",
            "    \\$code = 1003;//错误码默认使用",
            "    \\$data = [];//返回数据",
            "    //处理post",
            "    //调用业务层函数",
            "    //example \\$this->service->function();",
            "    $3",
            "    ",
            "    //开始输出",
            "    switch (\\$cond) {",
            "        case   1://异常1",
            "            \\$this->data->out(\\$code, \\$data);",
            "            break;",
            "        // case   2:",
            "        //     \\$this->data->out($code, \\$data);",
            "        //     break;",
            "        default:",
            "            \\$this->data->out(1001, \\$data);",
            "        }",
            "}",
        ],
        "description": "create_controller_function"
    },
    "create controller class": {
        "prefix": "ctrl_class_creater",
        "body": [
            "namespace $1;",
            "",
            "//namespace 模块名",
            "use \\app;",
            "",
            "defined('IN_LION') or exit('No permission resources.');",
            "/**",
            " * ================",
            " * @Author:    lion",
            " * @ver:       $3",
            " * @DataTime:  2018-10-14",
            " * @describe:  $1_$2",
            " * ================",
            " */",
            "class $2_controller",
            "{",
            "    private \\$data,$2;",
            "    /**",
            "     * 构造函数",
            "     */",
            "    public function __construct()",
            "    {",
            "        \\$this->data = app::load_sys_class('protocol');//加载json数据模板",
            "        //todo 加载相关模块",
            "        \\$this->$2 = app::load_service_class('$2', '$1');//",
            "    }",
            "    $4",
            "}",
        ],
        "description": "create controller class"
    },
}